<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="txt_abteilung.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACTPyUAkkAlAJRDKACVRCoAl0ctAJdILgCYSC8AmEoxAJlMMwCaTTQAnFA3AJxROQCeVT0AoFc/AKBY
        QAClYUsApmJMAKhlTwCoZlEAqWhSAKtqVQCrbFcArG1ZALByXgCwc2AAsHRhALJ3ZACyeWYAtX1rALiC
        cQC7h3YAu4l4AL2LewC/jn8AwZKDAMKUhQDFmYoAxpqMAMedjwDKo5YAzKWZAM6onADQq6AA0a6jANGv
        pADSsaUA1rasANe5rwDXubAA2LqxANm8sgDZvbQA3cS8AN/IwADgycIA4cvEAOPOxwDk0MoA5tPNAObU
        zgDp2dUA7N7aAO7i3gDv4+AA8OXiAPLp5gDz6+gA9OvoAPTt6gD17uwA9vDuAPfy8AD48vEA+PTyAPn2
        9QD7+PcA+/n4APz6+gD9/PsA/v7+AAAAAAACLwAABFAAAAZwAAAIkAAACrAAAAvPAAAO8AAAIP8SAD3/
        MQBb/1EAef9xAJj/kQC1/7EA1P/RAP///wAAAAAAFC8AACJQAAAwcAAAPZAAAEywAABZzwAAZ/AAAHj/
        EQCK/zEAnP9RAK7/cQDA/5EA0v+xAOT/0QD///8AAAAAACYvAABAUAAAWnAAAHSQAACOsAAAqc8AAMLw
        AADR/xEA2P8xAN7/UQDj/3EA6f+RAO//sQD2/9EA////AAAAAAAvJgAAUEEAAHBbAACQdAAAsI4AAM+p
        AADwwwAA/9IRAP/YMQD/3VEA/+RxAP/qkQD/8LEA//bRAP///wAAAAAALxQAAFAiAABwMAAAkD4AALBN
        AADPWwAA8GkAAP95EQD/ijEA/51RAP+vcQD/wZEA/9KxAP/l0QD///8AAAAAAC8DAABQBAAAcAYAAJAJ
        AACwCgAAzwwAAPAOAAD/IBIA/z4xAP9cUQD/enEA/5eRAP+2sQD/1NEA////AAAAAAAvAA4AUAAXAHAA
        IQCQACsAsAA2AM8AQADwAEkA/xFaAP8xcAD/UYYA/3GcAP+RsgD/scgA/9HfAP///wAAAAAALwAgAFAA
        NgBwAEwAkABiALAAeADPAI4A8ACkAP8RswD/Mb4A/1HHAP9x0QD/kdwA/7HlAP/R8AD///8AAAAAACwA
        LwBLAFAAaQBwAIcAkAClALAAxADPAOEA8ADwEf8A8jH/APRR/wD2cf8A95H/APmx/wD70f8A////AAAA
        AAAbAC8ALQBQAD8AcABSAJAAYwCwAHYAzwCIAPAAmRH/AKYx/wC0Uf8AwnH/AM+R/wDcsf8A69H/AP//
        /wAAAAAACAAvAA4AUAAVAHAAGwCQACEAsAAmAM8ALADwAD4R/wBYMf8AcVH/AIxx/wCmkf8Av7H/ANrR
        /wD///8AX19fX19fX19fX19fX0wyGhoyTF9fX19fX19fX19fX19fX19fX19fSj8/SF9fNQ4AAA41X19I
        Pz9KX19fX19fX19PX19fX0oqFhYoQ18zDAAADDNfQygWFipKX19fX19fX19fX19fOgoBAA0xX0EjExMj
        QV8xDQAACjpfX19fX19fX19fX186CgIADTJfX0U5OUVfXzINAAIKOl9fX19fX19PT0hJT0otGRkpRF9f
        X19fX19fRCkZGS1KT0lJT19fX0cnExQpR0tAQElfX19fX19fX19fSUBAS0cpFBMnRl9PNwYAAQk6X09f
        X19fX19fT19fX19fX19POggAAAY3T042BAAABzlPX19fX19fX19fX19fX19fX085BwAABDZOX0YmERIn
        R19fX19fX19fX19fX19fX19fX0cnEhEmRl9fT01FRU5fX19fX19fX19fX19fX19fX19fX05FRU1PX0cx
        KS5AT19fX19fX19fX19fX19fX19fX19fT0AuKTJHKwsACSZFX19fX19fX19fX19fX19fX19fX19FJgkB
        CyscAAAAGj1fX19fX19fX19fX19fX19fX19fTz0aAAABHC8FAQUmSF9fX19fX19fX19fX19fX19fX19f
        SCYFAQUvSzwzOUlfX19PX19fX19fX09fX19fX19fT19fSTkzPEtfTkE3OEVOX19fX19fX19fX19fX19f
        X19fT0Q4N0FOX089FAABG0FPX19fX19OTU1MTU5fX19fX09AGwAAFD1fTjMAAQADOl9fX19fSzQsLCwt
        NEpfX19fXzoDAAEAM05POw8AAxY+X19fX19DGAACAAAZQ19fX19PPhYCAQ87T19KNygpO0xOQ0pfX0MZ
        AAIBABhDX19JQ05MOykoN0pfX09PTk5PQCEYHTRPQxgAAQAAGUNPNB0YIUBfTk5PX19fX09fT08kBwAC
        Gj9DGQEBAAEYQz8bAgEFJE9fT09fX09fX19fXx8DAAAVPUMYAAAAABhDPRYAAQQfX19fX19fX19fX19f
        PxgLEC9fQxgCAAIAGUNfLxELFz9fX19fX19fX19fX19fTkNKX19DGAEBAAAZQ19fSkNOX19fX19fX19P
        X19fX19fX09ENS0QAAIBABAtNURPX19PX19fX19fX19fX19fX19fTz0eBwEAAAEAAAcePU9fX19fX19f
        X19fX19fX19fX19fTz4gCQABAQAIID5PX19fX19fX19fX19PX19fX19fX09fT0AiCAAACSJAT19fX19P
        X19fX19fX19PX09PX19fX09fT0UlBgYlRE9PT19fX19PX09PX19PX19fX19fX09fX19fX0onJ0pfX19f
        X19PX19fX19fXwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>